{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api/api.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","React","memo","addMovie","useState","title","setTitle","setMovie","isError","setIsError","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","onClick","fetch","then","res","ok","Error","json","request","App","setMovies","useCallback","some","item","ReactDOM","render","document","getElementById"],"mappings":"uUAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAa,UAAQ,aAApC,SAEE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,cAAlC,SAAiDD,EAAMK,aAI3D,sBAAKJ,UAAU,UAAU,UAAQ,UAAjC,UACGD,EAAMM,KACP,iCC9BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,wBCLRC,EAA6BC,IAAMC,MAC9C,YAAmB,IAAhBC,EAAe,EAAfA,SACD,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,MAAnC,mBAAOf,EAAP,KAAckB,EAAd,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KAmBA,OACE,qCACE,uBAAMnB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQoB,QAAQ,cAAjC,yBAIA,qBAAKpB,UAAU,UAAf,SACE,uBACEqB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZvB,UAAWwB,IAAW,QAAS,CAAE,YAAaN,IAC9CO,MAAOV,EACPW,SAhCU,SAACC,GACrBX,EAASW,EAAMC,OAAOH,OACtBN,GAAW,QAkCJD,GAEG,mBAAGlB,UAAU,iBAAb,qDAMN,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEqB,KAAK,SACLrB,UAAU,kBACV6B,QA5CM,YCnBC,SAACd,GACtB,OAAOe,MAAM,GAAD,OAHF,sDAGE,eAAcf,EAAd,MACTgB,MAAK,SAAAC,GACJ,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAM,oBAGlB,OAAOF,EAAIG,WDaXC,CAAQrB,GACLgB,MAAK,SAAAC,GACCA,EAAIE,OAGPf,GAAW,GACXF,EAAS,OAHTA,EAASe,OAqCP,4BASF,qBAAKhC,UAAU,UAAf,SACE,wBACEqB,KAAK,SACLrB,UAAU,oBACV6B,QAAS,WACH9B,IACFc,EAASd,GACTkB,EAAS,MACTD,EAAS,MAPf,qCAgBN,sBAAKhB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCD,GAAS,cAAC,EAAD,CAAWA,MAAOA,aErFzBsC,EAAgB,WAC3B,MAA4BvB,mBAAkB,IAA9C,mBAAOP,EAAP,KAAe+B,EAAf,KAEMzB,EAAW0B,uBAAY,SAACxC,GACvBQ,EAAOiC,MAAK,SAAAC,GAAI,OACnBA,EAAKhC,SAAWV,EAAMU,WAEtB6B,EAAU,GAAD,mBAAK/B,GAAL,CAAaR,OAEvB,CAACQ,IAEJ,OACE,sBAAKP,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CACEa,SAAUA,UCnBpB6B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0088101c.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { request } from '../../api/api';\n\ntype Props = {\n  addMovie: (movie: Movie) => void\n};\n\nexport const FindMovie: React.FC<Props> = React.memo(\n  ({ addMovie }) => {\n    const [title, setTitle] = useState('');\n    const [movie, setMovie] = useState(null);\n    const [isError, setIsError] = useState(false);\n\n    const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setTitle(event.target.value);\n      setIsError(false);\n    };\n\n    const findMovie = () => {\n      request(title)\n        .then(res => {\n          if (!res.Error) {\n            setMovie(res);\n          } else {\n            setIsError(true);\n            setMovie(null);\n          }\n        });\n    };\n\n    return (\n      <>\n        <form className=\"find-movie\">\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"movie-title\">\n              Movie title\n            </label>\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={classNames('input', { 'is-danger': isError })}\n                value={title}\n                onChange={changeHandler}\n              />\n            </div>\n\n            {isError\n              && (\n                <p className=\"help is-danger\">\n                  Can&apos;t find a movie with such a title\n                </p>\n              )}\n          </div>\n\n          <div className=\"field is-grouped\">\n            <div className=\"control\">\n              <button\n                type=\"button\"\n                className=\"button is-light\"\n                onClick={findMovie}\n              >\n                Find a movie\n              </button>\n            </div>\n\n            <div className=\"control\">\n              <button\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  if (movie) {\n                    addMovie(movie);\n                    setMovie(null);\n                    setTitle('');\n                  }\n                }}\n              >\n                Add to the list\n              </button>\n            </div>\n          </div>\n        </form>\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          {movie && <MovieCard movie={movie} />}\n        </div>\n      </>\n    );\n  },\n);\n","const url = 'http://www.omdbapi.com/?i=tt3896198&apikey=4e13cbeb';\n\nexport const request = (title: string) => {\n  return fetch(`${url}&t=[${title}]`)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error('Loading error...');\n      }\n\n      return res.json();\n    });\n};\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = useCallback((movie: Movie) => {\n    if (!movies.some(item => (\n      item.imdbID === movie.imdbID\n    ))) {\n      setMovies([...movies, movie]);\n    }\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}